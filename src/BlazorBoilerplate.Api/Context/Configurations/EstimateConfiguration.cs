// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using BlazorBoilerplate.Api.SubContext;
using BlazorBoilerplate.Api.SubModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace BlazorBoilerplate.Api.SubContext.Configurations
{
    public partial class EstimateConfiguration : IEntityTypeConfiguration<Estimate>
    {
        public void Configure(EntityTypeBuilder<Estimate> entity)
        {
            entity.HasKey(e => e.EstimateGuid)
                .IsClustered(false);

            entity.HasIndex(e => e.AppointmentGuid, "appointmentguid")
                .HasFillFactor(90);

            entity.HasIndex(e => e.ClientGuid, "clientguid")
                .HasFillFactor(90);

            entity.HasIndex(e => e.DeleteGuid, "delg")
                .HasFillFactor(90);

            entity.HasIndex(e => e.Name, "estimatename")
                .HasFillFactor(90);

            entity.HasIndex(e => e.PatientGuid, "patientguid")
                .HasFillFactor(90);

            entity.HasIndex(e => e.ReservationGuid, "reservationguid")
                .HasFillFactor(90);

            entity.HasIndex(e => e.TodoGuid, "todoguid")
                .HasFillFactor(90);

            entity.Property(e => e.EstimateGuid).ValueGeneratedNever();

            entity.Property(e => e.AppointmentGuid).HasDefaultValueSql("('{00000000-0000-0000-0000-000000000000}')");

            entity.Property(e => e.CorpEstimateGuid).HasDefaultValueSql("('{00000000-0000-0000-0000-000000000000}')");

            entity.Property(e => e.NoteRtf).HasDefaultValueSql("('')");

            entity.Property(e => e.NoteText).HasDefaultValueSql("('')");

            entity.Property(e => e.PatientGuid).HasDefaultValueSql("('{00000000-0000-0000-0000-000000000000}')");

            entity.Property(e => e.ReservationGuid).HasDefaultValueSql("('{00000000-0000-0000-0000-000000000000}')");

            entity.Property(e => e.TemplateVersion)
                .HasDefaultValueSql("('A')")
                .IsFixedLength();

            entity.Property(e => e.TodoGuid).HasDefaultValueSql("('{00000000-0000-0000-0000-000000000000}')");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Estimate> entity);
    }
}
