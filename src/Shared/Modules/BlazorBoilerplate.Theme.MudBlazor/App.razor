@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Theme
@inject LazyAssemblyLoader assemblyLoader
@inject NavigationManager navigationManager
@inject IStringLocalizer<Global> L


<MudThemeProvider Theme="@Theme.Theme.DocsTheme()" IsDarkMode="true" />
<MudDialogProvider />
<MudSnackbarProvider />

<Router AppAssembly="typeof(App).Assembly" AdditionalAssemblies="ModuleProvider.AssembliesWithPages" OnNavigateAsync="@OnNavigateAsync">
    @*see https://github.com/dotnet/aspnetcore/issues/25731
            <Navigating>
            <LoadingBackground>
                <label>@L["Loading"]</label>
            </LoadingBackground>
        </Navigating>*@
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)">
            <Authorizing>
                <AuthorizingInProgress />
            </Authorizing>
            <NotAuthorized>
                @if (!context.User.Identity.IsAuthenticated)
                {
                    <RedirectToLogin />
                }
                else
                {
                    <UserNotAuthorized />
                }
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="typeof(MainLayout)">
                <PageNotFound />
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>

@code
{
    //private readonly MudTheme _defaultTheme = new() { Palette = new Palette() { Black = "#272c34" } };

    //private readonly MudTheme _darkTheme = new()
    //private MudTheme mudTheme = new()
    //{
    //    Palette = new Palette()
    //    {
    //        Primary = "#776be7",
    //        Black = "#27272f",
    //        Background = "#32333d",
    //        BackgroundGrey = "#27272f",
    //        Surface = "#373740",
    //        DrawerBackground = "#27272f",
    //        DrawerText = "rgba(255,255,255, 0.50)",
    //        DrawerIcon = "rgba(255,255,255, 0.50)",
    //        AppbarBackground = "#27272f",
    //        AppbarText = "rgba(255,255,255, 0.70)",
    //        TextPrimary = "rgba(255,255,255, 0.70)",
    //        TextSecondary = "rgba(255,255,255, 0.50)",
    //        ActionDefault = "#adadb1",
    //        ActionDisabled = "rgba(255,255,255, 0.26)",
    //        ActionDisabledBackground = "rgba(255,255,255, 0.12)",
    //        Divider = "rgba(255,255,255, 0.12)",
    //        DividerLight = "rgba(255,255,255, 0.06)",
    //        TableLines = "rgba(255,255,255, 0.12)",
    //        LinesDefault = "rgba(255,255,255, 0.12)",
    //        LinesInputs = "rgba(255,255,255, 0.3)",
    //        TextDisabled = "rgba(255,255,255, 0.2)",
    //        Info = "#3299ff",
    //        Success = "#0bba83",
    //        Warning = "#ffa800",
    //        Error = "#f64e62",
    //        Dark = "#27272f"
    //    }
    //};
    
    //MudTheme mudTheme = new MudTheme()
    //{
    //    Palette = new Palette()
    //    {
    //        Primary = "#5D2E8F",
    //        //Surface = "#f5f5f5",
    //        AppbarBackground = "#5D2E8F",
    //    }
    //};

    private async Task OnNavigateAsync(NavigationContext args)
    {
        if (navigationManager.IsWebAssembly())
            if (args.Path.Equals("admin", StringComparison.OrdinalIgnoreCase))
            {
                var assemblies = await assemblyLoader.LoadAssembliesAsync(
                    new List<string>() { "BlazorBoilerplate.Theme.MudBlazor.Admin.dll", "Blazored.TextEditor.dll" });

                ModuleProvider.AddModules(assemblies);
            }
    }
}